# Copyright (c) 2022 Institute of Software Chinese Academy of Sciences (ISCAS)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: container build and push

on:
  push:
    branches: [ "*" ]
    tags: [ '*.*.*' ]
  pull_request:
    branches: [ "*" ]

env:
  REGISTRY: ghcr.io
  EULIX_REGISTRY: hub.eulix.xyz
  HUAWEICLOUD_REGISTRY_SH: swr.cn-east-3.myhuaweicloud.com
  HUAWEICLOUD_REGISTRY_BJ: swr.cn-north-4.myhuaweicloud.com
  HUAWEICLOUD_REGISTRY_GZ: swr.cn-south-1.myhuaweicloud.com
  HUAWEICLOUD_REGISTRY_HK: swr.ap-southeast-1.myhuaweicloud.com
  HUAWEICLOUD_REGISTRY_SG: swr.ap-southeast-3.myhuaweicloud.com
  HUAWEICLOUD_REGISTRY_AF: swr.af-south-1.myhuaweicloud.com
  HUAWEICLOUD_REGISTRY_LA: swr.la-north-2.myhuaweicloud.com
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2

    - run: echo "GITHUB_REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
      shell: bash

    - name: Inspect builder
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log into registry ${{ env.EULIX_REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.EULIX_REGISTRY }}
        username: ${{ secrets.EULIX_REGISTRY_USERNAME }}
        password: ${{ secrets.EULIX_REGISTRY_PASSWORD }}

    - name: Log into registry Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_REGISTRY_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_REGISTRY_PASSWORD }}

    - name: Log into registry ${{ env.HUAWEICLOUD_REGISTRY_SH }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.HUAWEICLOUD_REGISTRY_SH }}
        username: cn-east-3@${{ secrets.HUAWEICLOUD_USERNAME }}
        password: ${{ secrets.HUAWEICLOUD_PASSWORD }}

    - name: Log into registry ${{ env.HUAWEICLOUD_REGISTRY_BJ }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.HUAWEICLOUD_REGISTRY_BJ }}
        username: cn-north-4@${{ secrets.HUAWEICLOUD_USERNAME }}
        password: ${{ secrets.HUAWEICLOUD_PASSWORD }}

    - name: Log into registry ${{ env.HUAWEICLOUD_REGISTRY_GZ }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.HUAWEICLOUD_REGISTRY_GZ }}
        username: cn-south-1@${{ secrets.HUAWEICLOUD_USERNAME }}
        password: ${{ secrets.HUAWEICLOUD_PASSWORD }}

    - name: Log into registry ${{ env.HUAWEICLOUD_REGISTRY_SG }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.HUAWEICLOUD_REGISTRY_SG }}
        username: ap-southeast-3@${{ secrets.HUAWEICLOUD_USERNAME }}
        password: ${{ secrets.HUAWEICLOUD_PASSWORD }}

    - name: Log into registry ${{ env.HUAWEICLOUD_REGISTRY_HK }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.HUAWEICLOUD_REGISTRY_HK }}
        username: ap-southeast-1@${{ secrets.HUAWEICLOUD_USERNAME }}
        password: ${{ secrets.HUAWEICLOUD_PASSWORD }}

    - name: Log into registry ${{ env.HUAWEICLOUD_REGISTRY_AF }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.HUAWEICLOUD_REGISTRY_AF }}
        username: af-south-1@${{ secrets.HUAWEICLOUD_USERNAME }}
        password: ${{ secrets.HUAWEICLOUD_PASSWORD }}

    - name: Log into registry ${{ env.HUAWEICLOUD_REGISTRY_LA }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.HUAWEICLOUD_REGISTRY_LA }}
        username: la-north-2@${{ secrets.HUAWEICLOUD_USERNAME }}
        password: ${{ secrets.HUAWEICLOUD_PASSWORD }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v2
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          ${{ env.EULIX_REGISTRY }}/${{ env.IMAGE_NAME }}
          aospace/${{ env.GITHUB_REPOSITORY_NAME }}
          ${{ env.HUAWEICLOUD_REGISTRY_SH }}/${{ env.IMAGE_NAME }}
          ${{ env.HUAWEICLOUD_REGISTRY_BJ }}/${{ env.IMAGE_NAME }}
          ${{ env.HUAWEICLOUD_REGISTRY_GZ }}/${{ env.IMAGE_NAME }}
          ${{ env.HUAWEICLOUD_REGISTRY_HK }}/${{ env.IMAGE_NAME }}
          ${{ env.HUAWEICLOUD_REGISTRY_SG }}/${{ env.IMAGE_NAME }}
          ${{ env.HUAWEICLOUD_REGISTRY_AF }}/${{ env.IMAGE_NAME }}
          ${{ env.HUAWEICLOUD_REGISTRY_LA }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      id: build-and-push 
      uses: docker/build-push-action@v4.2.1
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        builder: ${{ steps.buildx.outputs.name }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: Dockerfile
        provenance: false

    - name: Extract Docker metadata
      id: meta-opensource
      uses: docker/metadata-action@v2
      with:
        images: |
          ${{ env.EULIX_REGISTRY }}/cicada-private/aoplatform-services
        flavor: |
          prefix=opensource-

    - name: Build and push Docker image
      id: build-and-push-opensource
      uses: docker/build-push-action@v2
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-opensource.outputs.tags }}
        labels: ${{ steps.meta-opensource.outputs.labels }}
        builder: ${{ steps.buildx.outputs.name }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: Dockerfile
